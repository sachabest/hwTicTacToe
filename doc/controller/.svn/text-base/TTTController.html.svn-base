<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_03) on Mon Apr 23 20:18:49 PDT 2012 -->
<title>TTTController</title>
<meta name="date" content="2012-04-23">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="TTTController";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/TTTController.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev Class</li>
<li><a href="../controller/TTTMenuListener.html" title="class in controller"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?controller/TTTController.html" target="_top">Frames</a></li>
<li><a href="TTTController.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field_summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field_detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">controller</div>
<h2 title="Class TTTController" class="title">Class TTTController</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>controller.TTTController</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd>java.awt.event.MouseListener, java.util.EventListener</dd>
</dl>
<hr>
<br>
<pre>public class <span class="strong">TTTController</span>
extends java.lang.Object
implements java.awt.event.MouseListener</pre>
<div class="block">The main class that handles all events in any Tic Tac Toe game.
 TTTController handles events queued by users in the "view", processes
 them, and transmits their changes into the "model" TTTBoard. TTTController
 listens to all created TTTPanels in the "view" for clicks by a user, and
 starts the rest of the process.</div>
<dl><dt><span class="strong">Author:</span></dt>
  <dd>Theo Davis and Sacha Best</dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private int</code></td>
<td class="colLast"><code><strong><a href="../controller/TTTController.html#gameType">gameType</a></strong></code>
<div class="block">This int represents the current game type as specified by the static final
 variables.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<td class="colLast"><code><strong><a href="../controller/TTTController.html#HUMAN_COMP">HUMAN_COMP</a></strong></code>
<div class="block">These static ints represent the two possible game types.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<td class="colLast"><code><strong><a href="../controller/TTTController.html#HUMAN_HUMAN">HUMAN_HUMAN</a></strong></code>
<div class="block">These static ints represent the two possible game types.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private <a href="../model/TTTBoard.html" title="class in model">TTTBoard</a></code></td>
<td class="colLast"><code><strong><a href="../controller/TTTController.html#model">model</a></strong></code>
<div class="block">The instance of TTTBoard used to represent the current game of Tic-Tac-Toe.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private <a href="../view/TTTFrame.html" title="class in view">TTTFrame</a></code></td>
<td class="colLast"><code><strong><a href="../controller/TTTController.html#view">view</a></strong></code>
<div class="block">The instance of TTTFrame shown in the UI and based on the TTTBoard model.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../controller/TTTController.html#TTTController()">TTTController</a></strong>()</code>
<div class="block">See workhorse constructor.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><strong><a href="../controller/TTTController.html#TTTController(int)">TTTController</a></strong>(int&nbsp;dimensions)</code>
<div class="block">Constructor for a new TTTController which is used to start a new game of Tic-Tac-Toe.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><strong><a href="../controller/TTTController.html#addMouseListeners()">addMouseListeners</a></strong>()</code>
<div class="block">This method adds the TTTController class as a MouseListener for every TTTPanel</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../controller/TTTController.html#changeGameType(int)">changeGameType</a></strong>(int&nbsp;changeTo)</code>
<div class="block">This method resets the board and changes the game type to the type specified
 based on the static final variables.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../controller/TTTController.html#changeSkin(global.Skin)">changeSkin</a></strong>(<a href="../global/Skin.html" title="class in global">Skin</a>&nbsp;changeTo)</code>
<div class="block">This method changes the Skin of the view.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../controller/TTTController.html#computerMove()">computerMove</a></strong>()</code>
<div class="block">This method represents a Computer's decision.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../model/TTTBoard.html" title="class in model">TTTBoard</a></code></td>
<td class="colLast"><code><strong><a href="../controller/TTTController.html#getModel()">getModel</a></strong>()</code>
<div class="block">This method returns the TTTBoard model.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../view/TTTFrame.html" title="class in view">TTTFrame</a></code></td>
<td class="colLast"><code><strong><a href="../controller/TTTController.html#getView()">getView</a></strong>()</code>
<div class="block">This method returns the TTTFrame view.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../controller/TTTController.html#main(java.lang.String[])">main</a></strong>(java.lang.String[]&nbsp;args)</code>
<div class="block">The main method used to start a game of TicTacToe.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../controller/TTTController.html#mouseClicked(java.awt.event.MouseEvent)">mouseClicked</a></strong>(java.awt.event.MouseEvent&nbsp;e)</code>
<div class="block">This method handles a click on a TTTPanel object.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../controller/TTTController.html#mouseEntered(java.awt.event.MouseEvent)">mouseEntered</a></strong>(java.awt.event.MouseEvent&nbsp;e)</code>
<div class="block">This method only exists to fulfill the requirements of the MouseListener interface.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../controller/TTTController.html#mouseExited(java.awt.event.MouseEvent)">mouseExited</a></strong>(java.awt.event.MouseEvent&nbsp;e)</code>
<div class="block">This method only exists to fulfill the requirements of the MouseListener interface.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../controller/TTTController.html#mousePressed(java.awt.event.MouseEvent)">mousePressed</a></strong>(java.awt.event.MouseEvent&nbsp;e)</code>
<div class="block">This method only exists to fulfill the requirements of the MouseListener interface.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../controller/TTTController.html#mouseReleased(java.awt.event.MouseEvent)">mouseReleased</a></strong>(java.awt.event.MouseEvent&nbsp;e)</code>
<div class="block">This method only exists to fulfill the requirements of the MouseListener interface.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static void</code></td>
<td class="colLast"><code><strong><a href="../controller/TTTController.html#newGame(int)">newGame</a></strong>(int&nbsp;dimensions)</code>
<div class="block">The method called by main() to create a new Tic-Tac-Toe game.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private void</code></td>
<td class="colLast"><code><strong><a href="../controller/TTTController.html#playSound(java.lang.String)">playSound</a></strong>(java.lang.String&nbsp;sound)</code>
<div class="block">This method plays a sound.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../controller/TTTController.html#reset(int)">reset</a></strong>(int&nbsp;dimensions)</code>
<div class="block">This method resets the board.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="HUMAN_HUMAN">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>HUMAN_HUMAN</h4>
<pre>public static final&nbsp;int HUMAN_HUMAN</pre>
<div class="block">These static ints represent the two possible game types.</div>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../constant-values.html#controller.TTTController.HUMAN_HUMAN">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="HUMAN_COMP">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>HUMAN_COMP</h4>
<pre>public static final&nbsp;int HUMAN_COMP</pre>
<div class="block">These static ints represent the two possible game types.</div>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../constant-values.html#controller.TTTController.HUMAN_COMP">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="model">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>model</h4>
<pre>private&nbsp;<a href="../model/TTTBoard.html" title="class in model">TTTBoard</a> model</pre>
<div class="block">The instance of TTTBoard used to represent the current game of Tic-Tac-Toe.</div>
</li>
</ul>
<a name="view">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>view</h4>
<pre>private&nbsp;<a href="../view/TTTFrame.html" title="class in view">TTTFrame</a> view</pre>
<div class="block">The instance of TTTFrame shown in the UI and based on the TTTBoard model.</div>
</li>
</ul>
<a name="gameType">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>gameType</h4>
<pre>private&nbsp;int gameType</pre>
<div class="block">This int represents the current game type as specified by the static final
 variables.</div>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="TTTController(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TTTController</h4>
<pre>public&nbsp;TTTController(int&nbsp;dimensions)</pre>
<div class="block">Constructor for a new TTTController which is used to start a new game of Tic-Tac-Toe.
 This constructor initializes the above instance variables and adds listeners to each
 UI object.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>dimensions</code> - - the dimensions of the board to be created. Defaults to 3.</dd></dl>
</li>
</ul>
<a name="TTTController()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>TTTController</h4>
<pre>public&nbsp;TTTController()</pre>
<div class="block">See workhorse constructor.</div>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="addMouseListeners()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addMouseListeners</h4>
<pre>private&nbsp;void&nbsp;addMouseListeners()</pre>
<div class="block">This method adds the TTTController class as a MouseListener for every TTTPanel</div>
</li>
</ul>
<a name="main(java.lang.String[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>main</h4>
<pre>public static&nbsp;void&nbsp;main(java.lang.String[]&nbsp;args)</pre>
<div class="block">The main method used to start a game of TicTacToe. Calls newGame() from a static context
 so that a main method recognizable by applets can still exist while creating a non-static
 TTTController object.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>args</code> - - the default java nomenclature for a main() method. Serves no purpose.</dd></dl>
</li>
</ul>
<a name="newGame(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>newGame</h4>
<pre>public static&nbsp;void&nbsp;newGame(int&nbsp;dimensions)</pre>
<div class="block">The method called by main() to create a new Tic-Tac-Toe game. This method is used when
 the game is initially run and also when the menuBar is used to select new game.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>dimensions</code> - - the dimensions of the board to be created.</dd></dl>
</li>
</ul>
<a name="reset(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>reset</h4>
<pre>public&nbsp;void&nbsp;reset(int&nbsp;dimensions)</pre>
<div class="block">This method resets the board. If dimensions = 0, then the game is
 created using the current dimensions.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>dimensions</code> - - the dimensions to initialize the board with.</dd></dl>
</li>
</ul>
<a name="changeSkin(global.Skin)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>changeSkin</h4>
<pre>public&nbsp;void&nbsp;changeSkin(<a href="../global/Skin.html" title="class in global">Skin</a>&nbsp;changeTo)</pre>
<div class="block">This method changes the Skin of the view.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>changeTo</code> - - the new Skin.</dd></dl>
</li>
</ul>
<a name="playSound(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>playSound</h4>
<pre>private&nbsp;void&nbsp;playSound(java.lang.String&nbsp;sound)</pre>
<div class="block">This method plays a sound.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>sound</code> - - the sound to be played.</dd></dl>
</li>
</ul>
<a name="changeGameType(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>changeGameType</h4>
<pre>public&nbsp;void&nbsp;changeGameType(int&nbsp;changeTo)</pre>
<div class="block">This method resets the board and changes the game type to the type specified
 based on the static final variables.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>changeTo</code> - - the int representing the game to change to.</dd></dl>
</li>
</ul>
<a name="computerMove()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>computerMove</h4>
<pre>public&nbsp;void&nbsp;computerMove()</pre>
<div class="block">This method represents a Computer's decision. The Computer "plays" by creating
 simulated MouseEvents to submit using the mouseClicked() method. This usage conserves
 code and reuses already created code to efficiently handle a Computer's moves. We 
 create a MouseEvent with only the relevant information (i.e. the TTTPanel clicked).</div>
</li>
</ul>
<a name="mouseClicked(java.awt.event.MouseEvent)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mouseClicked</h4>
<pre>public&nbsp;void&nbsp;mouseClicked(java.awt.event.MouseEvent&nbsp;e)</pre>
<div class="block">This method handles a click on a TTTPanel object. It interprets the
 object's relative Location, and sends the information to the TTTBoard
 for decoding. The TTTBoard then returns a 2 String String[], with the
 first String representing the player that clicked, and the second String
 representing the result of the click. There are 4 possible cases: a winning
 move, a non-winning move, a click on an already occupied location, and a
 "cat's game", or a full grid. The MouseEvent e can also be simulated by a 
 Computer if there is a Computer playing. This method also determines which
 sound should be played by the playSound() method.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code>mouseClicked</code>&nbsp;in interface&nbsp;<code>java.awt.event.MouseListener</code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>e</code> - - the MouseEvent fired by the TTTPanel clicked or the computer.</dd></dl>
</li>
</ul>
<a name="mouseEntered(java.awt.event.MouseEvent)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mouseEntered</h4>
<pre>public&nbsp;void&nbsp;mouseEntered(java.awt.event.MouseEvent&nbsp;e)</pre>
<div class="block">This method only exists to fulfill the requirements of the MouseListener interface.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code>mouseEntered</code>&nbsp;in interface&nbsp;<code>java.awt.event.MouseListener</code></dd>
</dl>
</li>
</ul>
<a name="mouseExited(java.awt.event.MouseEvent)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mouseExited</h4>
<pre>public&nbsp;void&nbsp;mouseExited(java.awt.event.MouseEvent&nbsp;e)</pre>
<div class="block">This method only exists to fulfill the requirements of the MouseListener interface.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code>mouseExited</code>&nbsp;in interface&nbsp;<code>java.awt.event.MouseListener</code></dd>
</dl>
</li>
</ul>
<a name="mousePressed(java.awt.event.MouseEvent)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mousePressed</h4>
<pre>public&nbsp;void&nbsp;mousePressed(java.awt.event.MouseEvent&nbsp;e)</pre>
<div class="block">This method only exists to fulfill the requirements of the MouseListener interface.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code>mousePressed</code>&nbsp;in interface&nbsp;<code>java.awt.event.MouseListener</code></dd>
</dl>
</li>
</ul>
<a name="mouseReleased(java.awt.event.MouseEvent)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mouseReleased</h4>
<pre>public&nbsp;void&nbsp;mouseReleased(java.awt.event.MouseEvent&nbsp;e)</pre>
<div class="block">This method only exists to fulfill the requirements of the MouseListener interface.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code>mouseReleased</code>&nbsp;in interface&nbsp;<code>java.awt.event.MouseListener</code></dd>
</dl>
</li>
</ul>
<a name="getView()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getView</h4>
<pre>public&nbsp;<a href="../view/TTTFrame.html" title="class in view">TTTFrame</a>&nbsp;getView()</pre>
<div class="block">This method returns the TTTFrame view.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>- the TTTFrame representing the view.</dd></dl>
</li>
</ul>
<a name="getModel()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>getModel</h4>
<pre>public&nbsp;<a href="../model/TTTBoard.html" title="class in model">TTTBoard</a>&nbsp;getModel()</pre>
<div class="block">This method returns the TTTBoard model.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>- the TTTBoard representing the view.</dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/TTTController.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev Class</li>
<li><a href="../controller/TTTMenuListener.html" title="class in controller"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?controller/TTTController.html" target="_top">Frames</a></li>
<li><a href="TTTController.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field_summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field_detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
