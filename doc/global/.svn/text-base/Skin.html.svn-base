<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_03) on Mon Apr 23 20:18:48 PDT 2012 -->
<title>Skin</title>
<meta name="date" content="2012-04-23">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="Skin";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Skin.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../global/Location.html" title="class in global"><span class="strong">Prev Class</span></a></li>
<li>Next Class</li>
</ul>
<ul class="navList">
<li><a href="../index.html?global/Skin.html" target="_top">Frames</a></li>
<li><a href="Skin.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field_summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field_detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">global</div>
<h2 title="Class Skin" class="title">Class Skin</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>global.Skin</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="strong">Skin</span>
extends java.lang.Object</pre>
<div class="block">The Skin class represents a skin used to represent two players in a game.
 It is tailored to import files stored in the project filesystem into Java-
 readable BufferedImage objects. The class is also tailored to set established
 values for a white and black background. This is helpful in changing the color
 of a border depending on the color of the object it surrounds.</div>
<dl><dt><span class="strong">Author:</span></dt>
  <dd>Theo Davis and Sacha Best</dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private java.awt.image.BufferedImage</code></td>
<td class="colLast"><code><strong><a href="../global/Skin.html#background">background</a></strong></code>
<div class="block">BufferedImages representing an x, an o, and an empty square.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static java.awt.Color</code></td>
<td class="colLast"><code><strong><a href="../global/Skin.html#BLACK_BACK">BLACK_BACK</a></strong></code>
<div class="block">Two Color objects representing a black and a white background.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private boolean</code></td>
<td class="colLast"><code><strong><a href="../global/Skin.html#dark">dark</a></strong></code>
<div class="block">A boolean representing whether or not the skin has a dark background.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private java.awt.image.BufferedImage</code></td>
<td class="colLast"><code><strong><a href="../global/Skin.html#o">o</a></strong></code>
<div class="block">BufferedImages representing an x, an o, and an empty square.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static java.awt.Color</code></td>
<td class="colLast"><code><strong><a href="../global/Skin.html#WHITE_BACK">WHITE_BACK</a></strong></code>
<div class="block">Two Color objects representing a black and a white background.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private java.awt.image.BufferedImage</code></td>
<td class="colLast"><code><strong><a href="../global/Skin.html#x">x</a></strong></code>
<div class="block">BufferedImages representing an x, an o, and an empty square.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../global/Skin.html#Skin(java.lang.String)">Skin</a></strong>(java.lang.String&nbsp;number)</code>
<div class="block">This constructor makes a new Skin object by reading three images stored in the 
 project filesystem.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.awt.Image</code></td>
<td class="colLast"><code><strong><a href="../global/Skin.html#getBackground()">getBackground</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.awt.Image</code></td>
<td class="colLast"><code><strong><a href="../global/Skin.html#getO()">getO</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.awt.Image</code></td>
<td class="colLast"><code><strong><a href="../global/Skin.html#getX()">getX</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../global/Skin.html#isDark()">isDark</a></strong>()</code>&nbsp;</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="x">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>x</h4>
<pre>private&nbsp;java.awt.image.BufferedImage x</pre>
<div class="block">BufferedImages representing an x, an o, and an empty square.</div>
</li>
</ul>
<a name="o">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>o</h4>
<pre>private&nbsp;java.awt.image.BufferedImage o</pre>
<div class="block">BufferedImages representing an x, an o, and an empty square.</div>
</li>
</ul>
<a name="background">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>background</h4>
<pre>private&nbsp;java.awt.image.BufferedImage background</pre>
<div class="block">BufferedImages representing an x, an o, and an empty square.</div>
</li>
</ul>
<a name="dark">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>dark</h4>
<pre>private&nbsp;boolean dark</pre>
<div class="block">A boolean representing whether or not the skin has a dark background.</div>
</li>
</ul>
<a name="WHITE_BACK">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>WHITE_BACK</h4>
<pre>public static final&nbsp;java.awt.Color WHITE_BACK</pre>
<div class="block">Two Color objects representing a black and a white background. The given standards
 in the Color API do not reflect different monitor settings for color,
 these two objects do.</div>
</li>
</ul>
<a name="BLACK_BACK">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>BLACK_BACK</h4>
<pre>public static final&nbsp;java.awt.Color BLACK_BACK</pre>
<div class="block">Two Color objects representing a black and a white background. The given standards
 in the Color API do not reflect different monitor settings for color,
 these two objects do.</div>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="Skin(java.lang.String)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>Skin</h4>
<pre>public&nbsp;Skin(java.lang.String&nbsp;number)</pre>
<div class="block">This constructor makes a new Skin object by reading three images stored in the 
 project filesystem. It takes a String representing the number of the skin to be 
 chosen and reads the three files in that folder. The constructor then decides
 whether or not the color has a dark background, and stores a boolean representing
 that decision.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>number</code> - - the number of the skin to be created.</dd></dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="getX()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getX</h4>
<pre>public&nbsp;java.awt.Image&nbsp;getX()</pre>
<dl><dt><span class="strong">Returns:</span></dt><dd>- the image representing the X marking.</dd></dl>
</li>
</ul>
<a name="getO()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getO</h4>
<pre>public&nbsp;java.awt.Image&nbsp;getO()</pre>
<dl><dt><span class="strong">Returns:</span></dt><dd>- the image representing the O marking.</dd></dl>
</li>
</ul>
<a name="getBackground()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getBackground</h4>
<pre>public&nbsp;java.awt.Image&nbsp;getBackground()</pre>
<dl><dt><span class="strong">Returns:</span></dt><dd>- the image representing no marking.</dd></dl>
</li>
</ul>
<a name="isDark()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>isDark</h4>
<pre>public&nbsp;boolean&nbsp;isDark()</pre>
<dl><dt><span class="strong">Returns:</span></dt><dd>- a boolean representing whether or not the Skin has a dark background.</dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Skin.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../global/Location.html" title="class in global"><span class="strong">Prev Class</span></a></li>
<li>Next Class</li>
</ul>
<ul class="navList">
<li><a href="../index.html?global/Skin.html" target="_top">Frames</a></li>
<li><a href="Skin.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field_summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field_detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
